@model IList<SECU_CAMSPlus_DEV.Models.Project>

@{
    ViewBag.Title = "Project";
}
@if (TempData["ErrorESC"] != null)
{
    <script>
        $(document).ready(function () {
   
            var msg = "@TempData["ErrorESC"]";
            alert(msg);
        });
    </script>
}

<script>
    $(document).ready(function () {
        $('.table >  tbody  > tr').each(function (index) {
            debugger;
          

                var id = $(this)[0].id;

                if ($('#ddlPriority-' + id).val() == '1') {
                    $("#ddlInterval" + id).prop("disabled", true);
                  //  $("#ddlRepeatInterval" + id).prop("disabled", true);
                }

            
        });
        $('.ddlPrior').change(function () {
            // console.log($(this).val());
            // console.log($(this)[0].id);
            var selectedid = $(this)[0].id;
            var array = selectedid.split("-");
            console.log(array);
            if ($(this).val() != "1") {
                $("#ddlInterval" + array[1]).prop("disabled", false);
        
            } else {
                $("#ddlInterval" + array[1]).prop("disabled", true);
                $("#ddlInterval" + array[1]).val('0')
            }
        });
        $("#btnadd").on("click", function () {
            debugger;
            var status = true;
            var errors = "";
            $('.table >  tbody  > tr').each(function (index) {
            //   if (index != 0) {
                    console.log(index);
                    var id = $(this)[0].id;
                    console.log(id);
                    if ($("#txtcontactperson" + id).val() != "") {
                        if ($('#chksms' + id).prop('checked') == true) {
                            if ($("#txtcellno" + id).val() == "") {
                     
                                errors += "Mobile no can not be blank. <br/>";
                                status = false;
                                return false;
                            }
                        }
                        if ($('#chkemail' + id).prop('checked') == true) {

                            if ($("#txtemail" + id).val() == "") {
 
                                errors += "Email id can not be blank. <br/>";
                                status = false;
                                return false;
                            }
                        }
                        if ($("#txtcellno" + id).val() != "") {
                            var phone = $("#txtcellno" + id).val(),
                             intRegex = /^91[0-9]{10,12}$/;
                            if ((phone.length != 12) || (!intRegex.test(phone))) {

                                 errors += "Please enter a valid mobile number.Mobile number should start with 91.<br/>";
                                $("#txtcellno" + id).focus();
                                status = false;
                                return false;
                            }
                        }


                        if ($("#txtemail" + id).val() != "") {
                            var email = $("#txtemail" + id).val()

                            var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;

                            if (!pattern.test(email)) {

                                errors += "Please enter a valid Email Id.<br/>";
                                $("#txtemail" + id).focus();
                                status = false;
                                return false;
                            }
                        }
                    }
                    //else {
                    //    errors += "Contact person can not be blank. <br/>";
                    //    status = false;
                    //    return false;
                    //}

              //  }
            });
            if (status == true) {
                $("form").attr('action', 'EscalationGrid')
                $("form")[1].submit();
            }
            else {
                $('#divval').html(errors);
            }

        });

        $("#btnfinish").on("click", function () {
            debugger;
            var status = true;
            var errors = "";
            $('.table >  tbody  > tr').each(function (index) {
                if (index != 0) {
                    console.log(index);
                    var id = $(this)[0].id;
                    console.log(id);
                    if ($("#txtcontactperson" + id).val() != "") {
                        if ($('#chksms' + id).prop('checked') == true) {
                            if ($("#txtcellno" + id).val() == "") {
                               
                                errors += "Mobile no can not be blank. <br/>";
                                status = false;
                                return false;
                            }
                        }
                        if ($('#chkemail' + id).prop('checked') == true) {

                            if ($("#txtemail" + id).val() == "") {
                  
                                errors += "Email id can not be blank. <br/>";
                                status = false;
                                return false;
                            }
                        }
                        if ($("#txtcellno" + id).val() != "") {
                            var phone = $("#txtcellno" + id).val(),
                             intRegex = /^91[0-9]{10,12}$/;
                            if ((phone.length != 12) || (!intRegex.test(phone))) {
                           
                                 errors += "Please enter a valid mobile number.Mobile number should start with 91.<br/>";
                                $("#txtcellno" + id).focus();
                                status = false;
                                return false;
                            }
                        }


                        if ($("#txtemail" + id).val() != "") {
                            var email = $("#txtemail" + id).val()

                            var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
                    
                            if (!pattern.test(email)) {
                      
                                errors += "Please enter a valid Email Id.<br/>";
                                $("#txtemail" + id).focus();
                                status = false;
                                return false;
                            }
                        }
                    }
                    //else {
                    //    errors += "Contact person can not be blank. <br/>";
                    //    status = false;
                    //    return false;
                    //}
                }
            });
            if (status == true) {
                $("form").attr('action', 'EscalationGrid')
                $("form")[1].submit();
            }
            else {
                $('#divval').html(errors);
            }

        });
    });
</script>
@using (Html.BeginForm("EscalationGrid", "Project", FormMethod.Post))
{
  

    <div id="divval" class="valiation"></div>
    <div class="col-md-12">
    <div class="table-responsive">
         <hr />
        <table class="table table-advance table-hover tbl-header">
            <thead>
            <tr>
                <th></th>
               
                <th>Name
                </th>
                <th>Comments
                </th>
                <th>Telephone No
                </th>
                <th>SMS
                </th>
                <th>Mobile No
                </th>
                <th>Email
                </th>
                <th>Email ID
                </th>
                <th>Priority
                </th>
                <th>Interval
                </th>
                <th>Repeat Interval (min.)
                </th>

            </tr>
                </thead>


            @for (int i = 0; i < Model.Count; i++)
            {
                <tr id=@Model[i].EscPvtID  style="border-top: 1px solid #ddd;">
                    <td>
                        @Html.HiddenFor(m => m[i].EscPvtID)
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m[i].Contact_Person, new { @class = "form-control required ", @id = "txtcontactperson" + @Model[i].EscPvtID })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m[i].Comments, new { @class = "form-control required " })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m[i].Tel_No, new { @class = "form-control required ", @style = "width:140px" })
                    </td>
                    <td style="width: 5%">

                        @Html.CheckBoxFor(x => x[i].SMSMarkBool, new { @class = "chk", @id = "chksms" + @Model[i].EscPvtID })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m[i].Cell_No, new { @class = "form-control required ", @style = "width:140px", @id = "txtcellno" + @Model[i].EscPvtID })
                    </td>
                    <td style="width: 5%">

                        @Html.CheckBoxFor(x => x[i].EmailMarkBool, new { @class = "chk", @id = "chkemail" + @Model[i].EscPvtID })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m[i].EmailID, new { @class = "form-control required ", @id = "txtemail" + @Model[i].EscPvtID })
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x[i].Priority,
                         new SelectList(ViewBag.lstpriority, "Value", "Text", Model[i].Priority), new { @class = "form-control required ddlPrior",@id="ddlPriority-" + @Model[i].EscPvtID, @style = "width:60px" })

                    </td>
                    <td>
                    @Html.DropDownListFor(x => x[i].Interval,
                         new SelectList(ViewBag.lstinterval, "Value", "Text", Model[i].Interval), new { @class = "form-control required",@id="ddlInterval" + @Model[i].EscPvtID, @style = "width:60px" })

                    <td>
                        @Html.DropDownListFor(x => x[i].RepeatInterval,
                         new SelectList(ViewBag.lstrepinterval, "Value", "Text", Model[i].RepeatInterval), new { @class = "form-control required",@id="ddlRepeatInterval" + @Model[i].EscPvtID, @style = "width:60px" })

                    </td>
                    <td>
                        @Html.HiddenFor(m => m[i].SrNo)
                    </td>
                </tr>
                                        
            }

        </table>
        </div>
    </div>
    <div class="modal-footer">

        <div class="col-md-12 text-center">
        @if (Convert.ToString(Session["ProjPanelType"]) == "Commercial")
        {
               
            <input class="btn btn-success" type="button" value="Next" id="btnadd" />
        }
        else
        {
            <input class="btn btn-success" type="button" value="Finish" id="btnfinish" />
        }

        @Html.ActionLink(
                "Cancel",
                "DiscardChnages",
                "Project",
                new { onclick = "return confirm('If you exit now, the project will not be created. You may run setup again. Do you want to cancel setup ?')", @class = "btn btn-warning" })
            </div>
    </div>
}






<script src="~/Scripts/jquery-2.0.3.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
