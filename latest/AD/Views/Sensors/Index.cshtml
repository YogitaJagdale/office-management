@model IEnumerable<SECU_CAMSPlus_DEV.Models.SensorMaster>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["Message"] != null)
{
    <script>
        alert('@TempData["Message"]');
    </script>
}


@using (Html.BeginForm("Index", "Sensors", FormMethod.Get))
{

    var grid = new WebGrid(Model, canSort: false);
        
    <div class="col-lg-12 animated fadeIn margin-top">
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-12 col-sm-7 col-md-7">
                        <h2>Sensor Master</h2>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group">
                            <div class="input-group">
                                <i class="fa fa-search"></i>

                                <input type="text" name="filter" value="@ViewBag.filter" class="form-control" style="display: inline" placeholder="Search by Sensors" />

                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="submit" value="Index">Go</button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-1 col-md-1">
                        <a class="btn btn-success" data-modal="" href="~/Sensors/Create" id="btnCreate">
                            <span class="glyphicon glyphicon-plus">Add</span>
                        </a>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>

            <div class="panel-body">
                <div class="table-responsive">

                    @grid.GetHtml(tableStyle: "table table-hover table-striped", footerStyle: "tfoot dataTables_paginate", columns:
                grid.Columns
                (
                          grid.Column("SensorType", "Sensor Type"),
                        grid.Column("Alarm", "Alarm"),
                         grid.Column("RestoralType", "Restoral Type"),
                         grid.Column("Action", "Action"),

            grid.Column(header: "", canSort: false, style: "action",
                format: @<text>
                    @Html.Raw("<a data-modal='' data-toggle='tooltip' data-placement='right' data-original-title='Edit' class='glyphicon glyphicon-edit btn btn-success btn-xs' href='Edit/" + item.SensorType + "' id='" + item.SensorType + "''> </a>")

                    </text>),

 grid.Column(header: "", format: (item) => Html.ActionLink(" ", "Delete", new { id = item.SensorType },
    new { onclick = "return confirm('Are you sure you wish to delete this Sensor?'); ", @Name = "Delete", @class = "glyphicon glyphicon-trash btn btn-danger btn-xs", title="Delete"  }))

     ), mode: WebGridPagerModes.Numeric)
                    <script type="text/javascript">
                        function updateGrid() {
        @Html.Raw(HttpUtility.HtmlDecode(grid.GetContainerUpdateScript("/?page=" + (grid.PageIndex + 1)).ToString()))
    }
                    </script>

                </div>
            </div>
        </div>
    </div>

      

        
    }
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/scripts/Popup.js")
}