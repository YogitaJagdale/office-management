@model SECU_CAMSPlus_DEV.Models.Tickets

@{
    Layout = "";
}



@using (Html.BeginForm("Index", "SearchTickets"))
{
    <div class="row">
        <div class="col-sm-12">
            <div class="col-sm-1">
                Ticket No
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.TicketNo, new { @class = "form-control", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                Ticket Status
            </div>
            <div class="col-sm-2">

                @Html.DropDownListFor(model => model.TicketStatus, new SelectList(Model.lstTicketStatus, "Value", "Text", Model.TicketStatus), new { @class = "form-control" })
            </div>
            <div class="col-sm-1">
                Assigned To
            </div>
            <div class="col-sm-2">

                @Html.DropDownListFor(model => model.AssignedTo, new SelectList(Model.lstAssignedTo, "Value", "Text", Model.AssignedTo), new { @class = "form-control" })
            </div>
            <div class="col-sm-1">
                Client Name
            </div>
            <div class="col-sm-2">

                @Html.DropDownListFor(model => model.ClientName, new SelectList(Model.Clients, "Value", "Text", Model.ClientName), new { @class = "form-control", @id = "clientlist" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="col-sm-1">
                Client Circle
            </div>
            <div class="col-sm-2">

                @Html.DropDownListFor(model => model.CircleName, new SelectList(Model.clientCircle, "Value", "Text", Model.CircleName), new { @class = "form-control", @id = "clientCircle", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                Panel ID
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.PanelID, new { @class = "form-control", @id = "PanelID", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                Panel Mode
            </div>
            <div class="col-sm-2">

                @Html.DropDownListFor(model => model.PanelMode, new SelectList(Model.PanelModes, "Value", "Text", Model.PanelMode), new { @class = "form-control", @Required = "Required" })
            </div>
        </div>
    </div>

    <div class=" row">
        <div class="col-sm-12">
            <div class="col-sm-1">
                Site ID
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.SiteID, new { @class = "form-control", @id = "SiteID", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                Start Date
            </div>
            <div class="col-sm-2">
                @*datepicker*@
                @Html.TextBoxFor(model => model.TimeFrom, "{0:HH:mm:ss}", new { type = "date", @id = "timeFrom", @class = "form-control", @style = "width: 80%;", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                End Date
            </div>
            <div class="col-sm-2">
                @*datepicker*@
                @Html.TextBoxFor(model => model.TimeTo, "{0:HH:mm:ss}", new { type = "date", @id = "timeTo", @class = "form-control", @style = "width: 80%;", @Required = "Required" })
            </div>
            <div class="col-sm-1">
                Subscription
            </div>
            <div class="col-sm-2">
                @Html.DropDownListFor(model => model.SubName, new SelectList(Model.subscription, "Value", "Text", Model.SubName), new { @class = "form-control", @Required = "Required" })
            </div>
            <div class=" row">
                <div class="col-sm-12">
                    <div class="col-sm-1">
                        Ticket Type : 
                    </div>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.alarm, new SelectList(Model.AlarmType, "Value", "Text", Model.alarm), new { @class = "form-control dropdown-option", @Required = "Required" })
                    </div>

                </div>
            </div>
            <div class=" row">
                <div class="col-sm-12">
                      <div class="col-sm-10">
                    <input type="submit" id="btnSearch" value="Search" name="Command" />
                </div>
               </div>
            </div>
            <br />
            @if (Session["cheackDiv"].ToString()=="Search")
            {               
          
            <div class="row" id="divAssignTosupervisor">
                <div class="col-sm-12">
                    <div class="col-sm-1">
                        <input class="btn btn-primary" type="button" value="Assign To Supervisor" name="Command" id="btnAssignToSupervisor" />
                    </div>
                    <div class="col-sm-1">
                         <label>Assign To Supervisor</label>
                        </div>
                         <div class="col-sm-10">
                        <div class="form-group">
                           
                            @Html.DropDownListFor(model => model.supervisorName, new SelectList(Model.Supervisor, "Value", "Text"), new {@id="SupervisorLoginId" ,@width="150px"})

                            <button id="imgbtnAssign" name="Command" value="Assign" class="btn btn-primary btn-sm" data-toggle="tooltip" data-placement="right" data-original-title="Assign To Supervisor">
                             <i class="fa fa-user"></i></button>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>  
}

<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#clientlist").change(function () {
            debugger;
            $.ajax({

                type: 'POST',
                url: '@Url.Action("BindClientCircles")', // we are calling json method
                dataType: 'json',
                data: { id: $("#clientlist").val() },
                async: false,
                // here we are get value of selected client and passing same value
                success: function (clientCircle) {
                    console.log(clientCircle);
                    $.each(clientCircle, function (i, clientCircle) {
                        $("#clientCircle").append('<option value="' + clientCircle.Value + '">' +
                             clientCircle.Text + '</option>');
                    });
                },
                error: function (ex) {
                    console.log(ex);
                    alert('Failed to retrieve circles.' + ex);
                }
            });
            return false;
        })
    });
</script>

<script type="text/javascript">
    $(function () {
        $(document).bind('contextmenu', function (e) {
            e.preventDefault();
            //alert('Due to security reason, Right Click is not allowed.');
        });
    });
</script>