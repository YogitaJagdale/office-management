@model IList<SECU_CAMSPlus_DEV.Models.Project>

@{
 
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Project";
}

@if (TempData["AddSchedulerError"] != null)
{
    <script>
        $(document).ready(function () {
            history.pushState(null, null, location.href);
            window.onpopstate = function (event) {
                history.go(1);
            };
            $("#divinvalid").show();
            //var msg = "@TempData["AddSchedulerError"]";
            //alert(msg);
        });
    </script>
}

@using (Html.BeginForm("AddScheduler", "Project", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="col-lg-12 animated fadeIn margin-top">
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-md-12">
                        <h2>Add Scheduler</h2>
                    </div>
                </div>
            </div>

            <div class="panel-body">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="note note-info margin-top0 ">
                            <div class="row">
                                <div class="col-md-12">
                                    <h3 class="box-heading">@Html.Label("lblprojectname", Convert.ToString(Session["ProjectName"]), new { @class = "ProjectLabel" })</h3>
                                    <p>Commercial Panel Arm/ Disarm Scheduler</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-danger" id="divinvalid" role="alert" style="display: none" align="Left">
                            @if (TempData["AddSchedulerError"] != null)
                            {      @TempData["AddSchedulerError"]

                            }
                        </div>

                        <div class="alert alert-success" role="alert" id="divSuccess" style="display: none" align="Left">
                            @if (TempData["notice"] != null)
                            {      @TempData["notice"]

                            }
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table">
                        <tr>
                            <th></th>
                            <th>Day
                            </th>
                            <th>Holiday
                            </th>
                            <th>Open Time
                            </th>
                            <th>Early Open Time
                            </th>
                            <th>Late Open Time
                            </th>
                            <th>Close Time
                            </th>
                            <th>Early Close Time
                            </th>
                            <th>Late Close Time
                            </th>


                        </tr>

                        @for (int i = 0; i < Model.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.HiddenFor(m => m[i].ScheduleID)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => m[i].DayName, new { @class = "form-control required " })
                                    @Html.HiddenFor(m => m[i].DayName)

                                </td>
                                <td>
                                    @* @Html.DisplayFor(m => m[i].DayName, new { @class = "form-control required " })*@
                                    @Html.CheckBoxFor(x => x[i].HolidayBool, new { @class = "chk" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m[i].OpenTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].OpenTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m[i].EarlyOpenTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].EarlyOpenTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td>

                                    @Html.TextBoxFor(m => m[i].LateOpenTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].LateOpenTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m[i].CloseTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].CloseTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td>

                                    @Html.TextBoxFor(m => m[i].EarlyCloseTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].EarlyCloseTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m[i].LateCloseTime, "{0:HH:mm:ss}", new { step = "1", type = "time", @class = "form-control required ", @Value = Model[i].LateCloseTime.ToString("HH:mm:ss"), @style = "width:140px" })
                                </td>
                                <td></td>

                            </tr>
                            <tr>

                                @Html.HiddenFor(m => m[i].ProjectName)
                            </tr>
                        }

                    </table>

                </div>

            </div>
            <div class="panel-footer text-center">
                <span id="progress" class="text-center" style="display: none;">
                    <img src="/images/ajax-loader.gif" alt="wiat" />
                    Wait..
                </span>



                <input class="btn btn-success" type="submit" value="Finish" id="btnaddsch" />

                @Html.ActionLink(
                "Cancel",
                "DiscardChnages",
                "Project",
                new { onclick = "return confirm('If you exit now, the project will not be created. You may run setup again. Do you want to cancel setup ?')", @class = "btn btn-default" })

            </div>
        </div>
    </div>
  
    
  
}
}



    <script>
        history.pushState(null, null, location.href);
        window.onpopstate = function (event) {
            history.go(1);
        };
    </script>
